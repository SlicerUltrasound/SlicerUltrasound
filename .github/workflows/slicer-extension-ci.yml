name: Build and Test Slicer Extension (Official)

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential git

      - name: Download Slicer
        run: |
          # Download Slicer for testing (not building)
          SLICER_VERSION="5.8.1"
          SLICER_URL="https://download.slicer.org/bitstream/67c51fc129825655577cfee9"
          wget $SLICER_URL -O Slicer-$SLICER_VERSION-linux-amd64.tar.gz
          tar xzf Slicer-$SLICER_VERSION-linux-amd64.tar.gz
          export SLICER_HOME=$PWD/Slicer-$SLICER_VERSION-linux-amd64
          echo "SLICER_HOME=$SLICER_HOME" >> $GITHUB_ENV

      - name: Install SlicerUltrasound module
        run: |
          # Copy module files directly to Slicer's extension directory
          extension_dir=$SLICER_HOME/lib/Slicer-5.8/qt-scripted-modules

          # Copy the module directories
          modules=("AnnotateUltrasound" "AnonymizeUltrasound" "MmodeAnalysis" "TimeSeriesAnnotation")
          for module in "${modules[@]}"; do
            if [ -d "$module" ]; then
              target_dir="$extension_dir/$module"
              echo "Installing $module to $target_dir"

              # Remove existing directory if it exists
              if [ -d "$target_dir" ]; then
                rm -rf "$target_dir"
              fi

              # Copy the module
              cp -r "$module" "$target_dir"
            fi
          done

          echo "✓ Modules installed successfully"

      - name: Run Python tests
        run: |
          # Run pytest tests in Slicer's Python environment
          make test-pytest

      - name: Test module loading
        run: |
          # Create a temporary Python script for module loading test
          cat > test_module_loading.py << 'EOF'
          import sys
          import os

          # Add Slicer extension path
          slicer_home = os.environ.get('SLICER_HOME')
          if slicer_home:
              extension_path = os.path.join(slicer_home, 'lib', 'Slicer-5.8', 'qt-scripted-modules')
              sys.path.append(extension_path)

          # Test importing each module
          modules = ['AnnotateUltrasound', 'AnonymizeUltrasound', 'MmodeAnalysis', 'TimeSeriesAnnotation']
          for module in modules:
              try:
                  __import__(module)
                  print(f'✓ {module} imported successfully')
              except Exception as e:
                  print(f'✗ Failed to import {module}: {e}')
                  sys.exit(1)
          print('✓ All modules imported successfully')
          EOF

          # Run the module loading test
          $SLICER_HOME/bin/PythonSlicer test_module_loading.py
