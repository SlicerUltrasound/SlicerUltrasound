name: Run Slicer Module Tests

# Trigger the workflow on pull requests to the main branch
on:
  pull_request:
    branches: [main]

jobs:
  # Job 1: Basic pytest tests (fastest, runs first)
  test-pytest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install Slicer
        run: |
          # Download and install Slicer 5.8.1
          wget https://download.slicer.org/bitstream/67c51fc129825655577cfee9 -O Slicer-5.8.1-linux-amd64.tar.gz
          tar xzvf Slicer-5.8.1-linux-amd64.tar.gz
          export SLICER_HOME=$PWD/Slicer-5.8.1-linux-amd64
          echo "SLICER_HOME=$SLICER_HOME" >> $GITHUB_ENV

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential

      - name: Run pytest tests
        run: |
          make test-pytest

      - name: Upload pytest coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: pytest
          name: codecov-pytest
          fail_ci_if_error: false

      - name: Check permissions on module directory
        run: |
          echo "Current user and groups:"
          id
          echo "qt-scripted-modules directory permissions:"
          ls -ld $SLICER_HOME/lib/Slicer-5.8/qt-scripted-modules/
          echo "AnnotateUltrasound directory permissions:"
          ls -ld $SLICER_HOME/lib/Slicer-5.8/qt-scripted-modules/AnnotateUltrasound || echo "Not found"
          echo "AnnotateUltrasound files:"
          ls -l $SLICER_HOME/lib/Slicer-5.8/qt-scripted-modules/AnnotateUltrasound || echo "Not found"

  # Job 2: Tests with coverage (most comprehensive, skips GUI tests)
  test-coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install Slicer
        run: |
          # Download and install Slicer 5.8.1
          wget https://download.slicer.org/bitstream/67c51fc129825655577cfee9 -O Slicer-5.8.1-linux-amd64.tar.gz
          tar xzvf Slicer-5.8.1-linux-amd64.tar.gz
          export SLICER_HOME=$PWD/Slicer-5.8.1-linux-amd64
          echo "SLICER_HOME=$SLICER_HOME" >> $GITHUB_ENV

      - name: Run CI tests (skips GUI tests)
        run: |
          make test-ci

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: coverage
          name: codecov-coverage
          fail_ci_if_error: false
