name: Run Slicer Module Tests

# Trigger the workflow on pull requests to the main branch
on:
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install Slicer
        run: |
          # Download and install Slicer 5.8.1
          wget https://download.slicer.org/bitstream/67c51fc129825655577cfee9 -O Slicer-5.8.1-linux-amd64.tar.gz
          tar xzvf Slicer-5.8.1-linux-amd64.tar.gz
          export SLICER_HOME=$PWD/Slicer-5.8.1-linux-amd64
          echo "SLICER_HOME=$SLICER_HOME" >> $GITHUB_ENV

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential

      - name: Install SlicerUltrasound module
        run: |
          # Copy module files directly to Slicer's extension directory
          extension_dir=$SLICER_HOME/lib/Slicer-5.8/qt-scripted-modules

          # Copy the module directories
          modules=("AnnotateUltrasound" "AnonymizeUltrasound" "MmodeAnalysis" "TimeSeriesAnnotation")
          for module in "${modules[@]}"; do
            if [ -d "$module" ]; then
              target_dir="$extension_dir/$module"
              echo "Copying $module to $target_dir"

              # Remove existing directory if it exists
              if [ -d "$target_dir" ]; then
                rm -rf "$target_dir"
              fi

              # Copy the module
              cp -r "$module" "$target_dir"
            fi
          done

          echo "âœ“ Module installed successfully"

      - name: Install test dependencies in Slicer Python
        run: |
          $SLICER_HOME/bin/PythonSlicer -m pip install pytest pytest-cov pytest-mock

      - name: Run tests in Slicer environment
        run: |
          # Run tests using the test runner script
          python3 run_slicer_tests.py --install-deps

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
